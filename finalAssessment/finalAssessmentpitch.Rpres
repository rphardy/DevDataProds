Shiny app pitch: A reactive shiny app utilising Gapminder data (R dataset)
========================================================
author: Richard Hardy
date: `r Sys.Date()` 
autosize: true

Investigating changes in Gross Domestic Product and life expectancy globally
========================================================


This app has two parts:

**Part 1:** 

- The app displays countries' GDP per capita and life expectancy in years from birth as recorded across 5-year intervals between 1952 and 2007. 

- Moving the slider (or clicking through using the right arrowkey), reveals the [general improvements in health and wealth](https://www.youtube.com/watch?v=hVimVzgtD6w) globally over the second half of the 20th century.

**Part 2:** 

- Select a country of interest and the app returns a line plot of the GDP per capita for that country over time, as well as the percentage change in GDP per capita from 1952 to 2007. Similarly for life expectancy.

``` {r , datasets, echo = FALSE}
require(gapminder)
library(dplyr)
library(ggplot2)
gap_bit <- gapminder[gapminder$continent != "Oceania" & gapminder$year == 1952,]
gap_bit <- gap_bit[with(gap_bit, order(continent, year, -1 * pop)), ]
```


========================================================
**Part 1: sample output for 1952**

- The world plot displays countries by continent, with bubble size an indication of their population. The example below is produced by setting the slider to 1952.

```{r plot, echo = FALSE}

            ggplot(gap_bit, aes(x = gdpPercap, y = lifeExp, size = pop)) +
            scale_x_log10(limits = c(150, 115000)) + ylim(c(16, 96)) +
            geom_point(pch = 21, color = 'grey20', show.legend = FALSE) +
            scale_size_area(max_size = 40) +
            facet_wrap(~ continent) + coord_fixed(ratio = 1/43) +
            aes(fill = country) + scale_fill_manual(values = country_colors) +
            theme_bw() + theme(strip.text = element_text(size = rel(1.1)))
```

***

- A note on the dataset: continents include Oceania, containing Australia and New Zealand in this dataset. These two countries are omitted from the global view.


========================================================
**Part 2: Sample output: China**

- GDP per capita and life expectancy are shown over time when a country is selected from the dropdown menu. Selecting 'China' from the country box produces the following GDP plot for China. 

```{r china_plot, echo = FALSE}
country <- "China"

        gap_country <- subset(gapminder, country == "China")
        gap_country <- gap_country[with(gap_country, order(continent, year, -1 * pop)), ]
        
        gdp <- ggplot(gap_country, aes(x = year, y = gdpPercap)) +
            geom_point(pch = 21, color = 'grey0', show.legend = FALSE) +
            geom_line(color = 'grey0') + theme_bw() +
            facet_wrap(~ country) + ylab("GDP per capita (US$, inflation-adjusted)") +
            aes(fill = country)
        gdp

```

***

- The app also returns from a reactive expression, the % change in GDP between 1952 and 2007, given as: 

``` {r, china_change, echo = FALSE }
percent <- (gapminder$gdpPercap[gapminder$country == "China" & gapminder$year == 2007] - gapminder$gdpPercap[gapminder$country == "China" & gapminder$year == 1952])/ 
        gapminder$gdpPercap[gapminder$country == "China" & gapminder$year == 1952] * 100

Chinapct <- paste("%",round(percent,2))
Chinapct
```

- Thank you for watching and I hope you enjoy exploring the Gapminder data with this app

- Hans Rosling's TED talk is the inspiration for this project, and ` r ?gapminder` will give the source code used to build the global plot. 
Enjoy!


========================================================
**reactive expression code in server.R : GDP change (%) calculation**

``` {r, code_chunk_calcutation, eval=FALSE}
shinyServer(function(input, output) {
    
   percentchange <- reactive({
        
       countryInput <- input$country
       (gapminder$gdpPercap[gapminder$country == 
        as.character(countryInput) & gapminder$year == 2007] -
        gapminder$gdpPercap[gapminder$country == 
        as.character(countryInput) & gapminder$year == 1952] ) / 
        gapminder$gdpPercap[gapminder$country == 
        as.character(countryInput) & gapminder$year == 1952] * 100
                
    })
})
