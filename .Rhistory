fit
fit$finalModel
rfPrediction <- predict(fit, newdata = testSetClean)
rfPrediction
View(testSetRaw)
View(trainSetRaw[1:20,])
cluster
str(cluster)
detectcores()
detectCores()
library(parallel)
library(doParallel)
detectCores()
rfPrediction
knitr::opts_chunk$set(echo = TRUE)
fit$finalModel
fit$finalModel
fit
fit$resample
confusionMatrix.train(fit)
confusionMatrix(fit)
library(caret)
library(dplyr)
library(ggplot2)
library(parallel)
library(doParallel)
confusionMatrix.train(fit)
fit$resample
fit$finalModel
fit$finalModel
str(fit$finalModel)
fit$modelInfo
fit$varImp
fit$finalmodel[varImp]
fit
fit$finalModel
fit$finalModel
knitr::opts_chunk$set(echo = TRUE)
fit$finalModel
names(trainSetRaw)
library(caret)
fit$finalModel
?caret
?caret()
??caret
fit$resample
str(fit)
fit$coefnames
fit$coefnames
shiny::runApp('C:/Users/Richard/DevDataProds/cherryApp')
?builder
mymap <- mymap %>% addMarkers(lat = -27.05, lng = 118.9, label = "rough location")
library(leaflet)
mymap <- mymap %>% addMarkers(lat = -27.05, lng = 118.9, label = "rough location")
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.05, lng = 118.9, label = "rough location")
mymap
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707, label = "crater center")
mymap
mymap <- mymap %>% addCircles(radius = 70)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70,000)
mymap
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70000)
mymap
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707, label = "crater center")
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70000,
label = "crater boundary")
mymap
?makeIcon
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707, label = "crater center")
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70000,
label = "crater boundary")
mymap <- mymap %>% addMarkers(icon = picIcon)
mymap
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7d/7dec64e307.png",
iconWidth = 31*215/230, iconHeight = 31,
iconAnchorX = 31*215/230/2, iconAnchorY = 16
)
mymap <- mymap %>% addMarkers(icon = picIcon)
mymap
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707,
label = "crater center", icon = picIcon)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70000,
label = "crater boundary")
mymap
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7d/7dec64e307.png",
iconWidth = 31, iconHeight = 31,
iconAnchorX = 31, iconAnchorY = 16
)
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707,
label = "crater center", icon = picIcon)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70000,
label = "crater boundary")
mymap
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7d/7dec64e307.png",
iconWidth = 100, iconHeight = 100,
iconAnchorX = 31, iconAnchorY = 16
)
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707,
label = "crater center", icon = picIcon)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70000,
label = "crater boundary")
mymap
?makeIcon
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7d/7dec64e307.png",
iconWidth = 100, iconHeight = 100,
iconAnchorX = 0, iconAnchorY = 0
)
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707,
label = "crater center", icon = picIcon)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70000,
label = "crater boundary")
mymap
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7d/7dec64e307.png",
iconWidth = 250, iconHeight = 250,
iconAnchorX = 0, iconAnchorY = 0
)
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707,
label = "crater center", icon = picIcon)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70000,
label = "crater boundary")
mymap
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7e/7e3b2be59d.png",
iconWidth = 250, iconHeight = 250,
iconAnchorX = 0, iconAnchorY = 0
)
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707,
label = "crater center", icon = picIcon)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70000,
label = "crater boundary")
mymap
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7e/7e3b2be59d.png",
iconWidth = 250, iconHeight = 200,
iconAnchorX = 0, iconAnchorY = 0
)
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7e/7e3b2be59d.png",
iconWidth = 250, iconHeight = 200,
iconAnchorX = 0, iconAnchorY = 0
)
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707,
label = "crater center", icon = picIcon)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70000,
label = "crater boundary")
mymap
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7e/7e4bb7ac91.png",
iconWidth = 250, iconHeight = 200,
iconAnchorX = 0, iconAnchorY = 0
)
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707,
label = "crater center", icon = picIcon)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70000,
label = "crater boundary")
mymap
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7e/7e4bb7ac91.png",
iconWidth = 250, iconHeight = 200,
iconAnchorX = 0, iconAnchorY = 0
)
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707,
label = "crater center (top-left corner at full zoom)",
icon = picIcon)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 70000,
label = "crater boundary")
mymap
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7e/7e4bb7ac91.png",
iconWidth = 250, iconHeight = 200,
iconAnchorX = 0, iconAnchorY = 0
)
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707,
label = "crater center (top-left corner at full zoom)",
icon = picIcon)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 35000,
label = "crater boundary")
mymap
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7e/7e4bb7ac91.png",
iconWidth = 200, iconHeight = 150,
iconAnchorX = 0, iconAnchorY = 0
)
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707,
label = "crater center (top-left corner at full zoom)",
icon = picIcon)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 35000,
label = "crater boundary")
mymap
paperSite <- "https://www.nature.com/articles/s41467-019-13985-7"
picIcon <- makeIcon(
iconUrl = "https://i.imgsafe.org/7e/7e4bb7ac91.png",
iconWidth = 200, iconHeight = 150,
iconAnchorX = 0, iconAnchorY = 0
)
paperSite <- "https://www.nature.com/articles/s41467-019-13985-7"
mymap <- leaflet()
mymap <- addTiles(mymap)
mymap <- mymap %>% addMarkers(lat = -27.170599, lng = 118.817707,
label = "crater center (top-left corner at full zoom)",
icon = picIcon, popup = paperSite)
mymap <- mymap %>% addCircles(lat = -27.170599, lng = 118.817707, radius = 35000,
label = "crater boundary")
mymap
?colSums
?dgamma
?show
?lm
?predict
?show
?gamma
?dgamma
?showMethods
showMethods(show)
?getMethod
getMethod(dgamma)
getMethod("dgamma")
getMethod("lm")
getMethod("predict")
getMethod("show")
getClass("show")
getS3method("show")
getmethod("show")
getMethod("show")
getS3Method("show")
?colSums
?mean
?lm
?predict
?colSums
?colSum
?colSums
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
ttest(x,y)
t.test(x,y)
lm(y,x)
lm(y~x)
fit <- lm(y~x)
summary(fit)
summary(fit)$p
summary(fit)$pvalue
summary(fit)$p.value
summary(fit)$coef
resid(fit)
summary(fit)
data(mtcars)
attach(mtcars)
lm(mpg~I(wt-mean(wt)),mtcars)
carsfit <- lm(mpg~I(wt-mean(wt)),mtcars)
summary(carsfit)
summary(carsfit)$conf
confint(carsfit)
predict.lm(carsfit, newdata=3000)
predict(carsfit, newdata=3000)
predict(carsfit, newdata = wt= 3000)
predict(carsfit, newdata = 3)
carspred <- predict(carsfit, newdata = 3)
summary(carspred)
carspred <- predict.lm(carsfit, newdata = 3)
summary(carspred)
confint(carspred)
confint.lm(carspred)
confint.lm(carspred$wt)
?predict
predict(carsfit, interval="prediction")
predict(carsfit, interval="prediction", newdata=3)
mtcars
predict(carsfit, interval="prediction", newdata=3)
predict(carsfit, interval="prediction", x=3)
predict(carsfit, interval="prediction", x=3)
predict(carsfit, level=0.95, x=3)
newdata <- data.frame(wt=3000/1000)
predict(carsfit, newdata, interval=("prediction"))
newdata
summary(carsfit)
predict(carsfit, newdata, interval=("prediction"))
fit <- lm(mpg~wt,mtcars)
predict(fit, newdata, interval=("prediction"))
fit <- lm(mpg~I(wt/2),mtcars)
confint(fit)
library(swirlify)
install.packages("swirlify")
0.01381384+0.00075252+0.00299883+0.01518985+0.00416187
summary(mtcars)
?plotly
?plot.ly
??plotly
library(plotly)
library(mtcars)
library(plotly)
summary(mtcars)
plot.ly(y=mpg, x=wt, mtcars)
plotly(mtcars, y=mpg, x=wt)
plotly(mtcars)
knitr::opts_chunk$set(echo = FALSE)
ggplot(aes(y=hp, x=wt, z=mpg), mtcars) + ggpoint()
ggplot(mtcars, aes(y=hp, x=wt, z=mpg)) + ggpoint()
ggplot(mtcars, aes(y=hp, x=wt, z=mpg)) + geom_point()
plot_ly(data=mtcars, x=wt, y=hp, z=mpg, mode="markers", color=as.factor(cyl))
plot_ly(data=mtcars, x=~wt, y=~hp, z=~mpg, mode="markers", color=as.factor(cyl))
plot_ly(data=mtcars, x=~wt, y=~hp, z=~mpg, mode="markers", color=~as.factor(cyl))
plot_ly(data=mtcars, x=~wt, y=~hp, z=~mpg, mode="markers", color=~as.factor(cyl), trace="scatter3d")
plot_ly(data=mtcars, x=~wt, y=~hp, z=~mpg, mode="markers", color=~as.factor(cyl), size=~disp, trace="scatter3d")
head(mtcars)
names(mtcars)
str(mtcars)
mtcars$index
index(mtcars)
mtcars[1,]
mtcars[2,]
str(mtcars)
class(mtcars)
mtcars[,0]
mtcars[,1]
mtcars[,2]
mtcars[,1]
mtcars[,]
rownames(mtcars)
plot_ly(data = mtcars, x = ~ wt, y = ~ hp, z = ~ mpg, color = ~ disp,
trace = ~ rownames(mtcars), size = ~ cyl)
mtcars$name <- rownames(mtcars)
mtcars
mtcars$displacement <- mtcars$disp
legend.sizes = seq(4, 8, 2)
legend.sizes
?marker
??marker
?add_markers
?layout
52/3
require(devtools)
install.packages("devtools")
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
install_github("ramnathv/slidify")
install.packges("slidify")
install.packages("slidify")
library(plotly)
data(mtcars)
p <- plot_ly(mtcars, x = ~ as.factor(mtcars$cyl),y = mtcars$mpg,color = as.factor(mtcars$cyl) , type = "box") %>%
layout(
title = "mpg depending on cyl",
scene = list(
xaxis = list(title = "cyl"),
yaxis = list(title = "mpg")
))
p
setwd("C:/Users/Richard/DevDataProdsSub")
dit()
dir()
dir()
pwd()
getwd()
dir()
dir(0)
dir()
library(gapminder)
data("gapminder_unfiltered")
gapdata <- data("gapminder_unfiltered")
rm(list=ls())
gapdata <- data("gapminder_unfiltered")
View(gapdata)
head(gapdata)
gapdata <- gapminder_unfiltered
rm("gapminder_unfiltered")
head(gapdata)
data("gapminder")
gapfilt <- gapminder
head(gapfilt)
library(ggplot2)
qplot(gapfilt, aes(x=year, y=lifeExp))
qplot(gapfilt, aes(x=year, y=lifeExp)) + geom_line()
ggplot(gapfilt, aes(x=year, y=lifeExp)) + geom_line()
library(dplyr)
gapfilt %>% group_by(country) %>%
ggplot(aes(x=year, y=lifeExp)) + geom_line()
gapfilt %>% group_by(country) %>%
ggplot(aes(x=year, y=lifeExp)) + geom_point()
gapfilt %>% group_by(country) %>%
ggplot(aes(x=year, y=lifeExp, col=continent)) + geom_point()
gapfilt %>% group_by(country) %>%
ggplot(aes(x=year, y=lifeExp, col=continent)) + geom_point() + geom_line()
names(gapfilt)
gapfilt %>% group_by(country) %>%
ggplot(aes(x=year, y=lifeExp, col=continent, size=gdpPercap)) + geom_point() + geom_line()
gapfilt %>% group_by(country) %>%
ggplot(aes(x=year, y=lifeExp, col=continent, size=gdpPercap)) + geom_point()
?gapminder_unfiltered
gap_with_colors <-
data.frame(gapminder,
cc = I(country_colors[match(gapminder$country,
names(country_colors))]))
gapfilt <- gapminder
head(gapfilt)
keepers <- with(gap_with_colors,
continent %in% c("Africa", "Europe") & year == 2007)
plot(lifeExp ~ gdpPercap, gap_with_colors,
subset = keepers, log = "x", pch = 21,
cex = sqrt(gap_with_colors$pop[keepers]/pi)/1500,
bg = gap_with_colors$cc[keepers])
h_countries <- c("Egypt", "Haiti", "Romania", "Thailand", "Venezuela")
h_dat <- droplevels(subset(gapminder, country %in% h_countries))
h_dat$country <- with(h_dat, reorder(country, lifeExp, max))
ggplot(h_dat, aes(x = year, y = lifeExp)) +
geom_line(aes(color = country)) +
scale_colour_manual(values = country_colors) +
guides(color = guide_legend(reverse = TRUE))
ggplot(subset(gapminder, continent != "Oceania"),
aes(x = year, y = lifeExp, group = country, color = country)) +
geom_line(lwd = 1, show_guide = FALSE) + facet_wrap(~ continent) +
scale_color_manual(values = country_colors) +
theme_bw() + theme(strip.text = element_text(size = rel(1.1)))
ggplot(subset(gapminder, continent != "Oceania"),
aes(x = year, y = lifeExp, group = country, color = country)) +
geom_line(lwd = 1, show.legend = FALSE) + facet_wrap(~ continent) +
scale_color_manual(values = country_colors) +
theme_bw() + theme(strip.text = element_text(size = rel(1.1)))
gap_bit <- subset(gapminder, year == 2007 & continent != "Oceania")
gap_bit <- gap_bit[with(gap_bit, order(continent, -1 * pop)), ]
ggplot(gap_bit, aes(x = gdpPercap, y = lifeExp, size = pop)) +
scale_x_log10(limits = c(150, 115000)) + ylim(c(16, 96)) +
geom_point(pch = 21, color = 'grey20', show_guide = FALSE) +
scale_size_area(max_size = 40) +
facet_wrap(~ continent) + coord_fixed(ratio = 1/43) +
aes(fill = country) + scale_fill_manual(values = country_colors) +
theme_bw() + theme(strip.text = element_text(size = rel(1.1)))
}
gap_bit <- subset(gapminder, year == 2007 & continent != "Oceania")
gap_bit <- gap_bit[with(gap_bit, order(continent, -1 * pop)), ]
ggplot(gap_bit, aes(x = gdpPercap, y = lifeExp, size = pop)) +
scale_x_log10(limits = c(150, 115000)) + ylim(c(16, 96)) +
geom_point(pch = 21, color = 'grey20', show.legend = FALSE) +
scale_size_area(max_size = 40) +
facet_wrap(~ continent) + coord_fixed(ratio = 1/43) +
aes(fill = country) + scale_fill_manual(values = country_colors) +
theme_bw() + theme(strip.text = element_text(size = rel(1.1)))
gap_bit <- subset(gapminder, year == 2007 & continent != "Oceania")
gap_bit <- gap_bit[with(gap_bit, order(continent, -1 * pop)), ]
ggplot(gap_bit, aes(x = gdpPercap, y = lifeExp, size = pop)) +
scale_x_log10(limits = c(150, 115000)) + ylim(c(16, 96)) +
geom_point(pch = 21, color = 'grey20', show.legend = FALSE) +
scale_size_area(max_size = 40) +
coord_fixed(ratio = 1/43) +
aes(fill = country) + scale_fill_manual(values = country_colors) +
theme_bw() + theme(strip.text = element_text(size = rel(1.1)))
ggplot(gap_bit, aes(x = gdpPercap, y = lifeExp, size = pop)) +
scale_x_log10(limits = c(150, 115000)) + ylim(c(16, 96)) +
geom_point(pch = 21, color = 'grey20', show.legend = FALSE) +
scale_size_area(max_size = 40) +
facet_wrap(~ continent) + coord_fixed(ratio = 1/43) +
aes(fill = country) + scale_fill_manual(values = country_colors) +
theme_bw() + theme(strip.text = element_text(size = rel(1.1)))
head(gapminder)
tail(gapminder)
shiny::runApp('shinyApp')
is.na(gapminder$year)
any(is.na(gapminder$year)==TRUE)
complete.cases(gapminder$year)
any(!complete.cases(gapminder$year))
any(complete.cases(gapminder$year))
all(complete.cases(gapminder$year))
names(gapminder)
all(complete.cases(gapminder$continent))
any(is.na(gapminder$continent))
any(is.na(gapminder$country))
any(is.na(gapminder$pop))
any(is.na(gapminder))
runApp('shinyApp')
unique(gapminder$year)
unique(gapminder_unfiltered$year)
?sliderInput
runApp('shinyApp')
